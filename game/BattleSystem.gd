#BattleSystem.gd
extends CanvasLayer

signal battle_ended(victory: bool)

@onready var player_stats_container: VBoxContainer = $BattleUI/PlayerStats
@onready var enemy_stats: VBoxContainer = $BattleUI/EnemyStats
@onready var battle_log: RichTextLabel = $BattleUI/BattleLog
@onready var timer: Timer = $Timer

var player_stats_instance: PlayerStats
var current_enemy: Node = null
var current_enemy_stats: MonsterStats = null  # ‚Üê –î–û–ë–ê–í–ò–õ–ò!
var is_player_turn: bool = true

var player_attack_messages = [
	"–ì–µ—Ä–æ–π –Ω–∞–Ω–µ—Å %d —É—Ä–æ–Ω–∞!",
	"–ì–µ—Ä–æ–π —Å —Ä–∞–∑–±–µ–≥—É —É–¥–∞—Ä–∏–ª –Ω–∞ %d —É—Ä–æ–Ω–∞!",
	"–ì–µ—Ä–æ–π –Ω–∞ –æ—Ç–º–∞—à—å —É–¥–∞—Ä–∏–ª –Ω–∞ %d —É—Ä–æ–Ω–∞!",
	"–ì–µ—Ä–æ–π –Ω–∞–Ω–µ—Å –º–æ—â–Ω—ã–π —É–¥–∞—Ä –Ω–∞ %d —É—Ä–æ–Ω–∞!",
	"–ì–µ—Ä–æ–π –±—Ä–æ—Å–∏–ª –∫–∞–º–µ–Ω—å –≤ –≥–æ–ª–æ–≤—É –Ω–∞ %d —É—Ä–æ–Ω–∞!",
	"–ì–µ—Ä–æ–π —É–ø–∞–ª –Ω–∞ –∫–æ–ª–µ–Ω–∫—É –≤—Ä–∞–≥–∞ –∏ –Ω–∞–Ω–µ—Å–ª–∏ %d —É—Ä–æ–Ω–∞!",
	"–ì–µ—Ä–æ–π –ø–ª—é–Ω—É–ª –ø—Ä—è–º–æ –≤ –±—É–±–µ–Ω –Ω–∞ %d —É—Ä–æ–Ω–∞!",
	"–†–∞–∑—è—â–∏–π —É–¥–∞—Ä –≥–µ—Ä–æ—è –≤ –ø–∞—Ö –Ω–∞ %d —É—Ä–æ–Ω–∞!",
	"–°–æ–∫—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–π —É–¥–∞—Ä –ø–æ —Å–∞–º–æ–ª—é–±–∏—é –≤—Ä–∞–≥–∞ –Ω–∞ %d —É—Ä–æ–Ω–∞!",
	"–í—Ä–∞–≥ —Å–ø–æ—Ç—ã–∫–Ω—É–ª—Å—è –∏ –ø–æ–ª—É—á–∏–ª %d —É—Ä–æ–Ω–∞!"
]

var enemy_attack_messages = [
	"%s –Ω–∞–Ω–µ—Å –≤–∞–º %d —É—Ä–æ–Ω–∞!",
	"%s –∞—Ç–∞–∫—É–µ—Ç –∏ –Ω–∞–Ω–æ—Å–∏—Ç %d —É—Ä–æ–Ω–∞!",
	"%s –±—å–µ—Ç –≤–∞—Å –Ω–∞ %d —É—Ä–æ–Ω–∞!",
	"–ê—Ç–∞–∫–∞ %s–∞ –≤ –≥–æ–ª–æ–≤—É –Ω–∞–Ω–æ—Å–∏—Ç %d —É—Ä–æ–Ω–∞!",
	"%s —Ü–∞—Ä–∞–ø–∞–µ—Ç –≤–∞—Å –Ω–∞ %d —É—Ä–æ–Ω–∞!",
	"%s –∫—É—Å–∞–µ—Ç –≤–∞—Å –Ω–∞ %d —É—Ä–æ–Ω–∞!",
	"–©–µ–ª—á–æ–∫ %s–∞ –Ω–∞–Ω–æ—Å–∏—Ç %d —É—Ä–æ–Ω–∞!",
	"%s —Ç–æ–ª–∫–∞–µ—Ç –≤–∞—Å –Ω–∞ %d —É—Ä–æ–Ω–∞!",
	"–ë—Ä–æ—Å–æ–∫ –ø—ã–ª–∏ %s–∞ –Ω–∞–Ω–æ—Å–∏—Ç %d —É—Ä–æ–Ω–∞!",
	"%s –ø—Ä—ã–≥–∞–µ—Ç –≤–∞–º –Ω–∞ —à–µ—é, –Ω–∞–Ω–µ—Å–µ–Ω %d —É—Ä–æ–Ω–∞ –ø–æ—è—Å–Ω–∏—Ü–µ!"
]

var player_critical_messages = [
	"üî• –ì–ï–†–û–ô –ù–ê–ù–û–°–ò–¢ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –£–î–ê–†! %d —É—Ä–æ–Ω–∞!",
	"üí• –ì–ï–†–û–ô –ù–ê–ù–û–°–ò–¢ –°–ú–ï–†–¢–ï–õ–¨–ù–´–ô –£–î–ê–†! %d —É—Ä–æ–Ω–∞!",
	"‚≠ê –ì–ï–†–û–ô –î–ï–õ–ê–ï–¢ –ò–î–ï–ê–õ–¨–ù–´–ô –£–î–ê–†! %d —É—Ä–æ–Ω–∞!"
]

var enemy_critical_messages = [
	"üî• %s –ù–ê–ù–û–°–ò–¢ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –£–î–ê–†! %d —É—Ä–æ–Ω–∞!",
	"üí• %s –ù–ê–ù–û–°–ò–¢ –°–ú–ï–†–¢–ï–õ–¨–ù–´–ô –£–î–ê–†! %d —É—Ä–æ–Ω–∞!",
	"‚≠ê %s –î–ï–õ–ê–ï–¢ –ò–î–ï–ê–õ–¨–ù–´–ô –£–î–ê–†! %d —É—Ä–æ–Ω–∞!"
]


func _ready():
	add_to_group("battle_system")
	player_stats_instance = get_tree().get_first_node_in_group("player_stats")
	if not player_stats_instance:
		push_error("PlayerStats not found! Make sure PlayerStats node is in 'player_stats' group")
	
	hide()  # ‚Üê –î–û–ë–ê–í–ò–¢–¨ –≠–¢–£ –°–¢–†–û–ö–£!

func start_battle(enemy: Node, enemy_stats_ref: MonsterStats):
	if player_stats_instance.current_health <= 0:
		print("–ò–≥—Ä–æ–∫ –º—ë—Ä—Ç–≤, –±–æ–π –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è")
		return
	# –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å enemy
	if not is_instance_valid(enemy) or not is_instance_valid(enemy_stats_ref):
		print("–í—Ä–∞–≥ –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –±–æ–π –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è")
		return
	# –ó–ê–©–ò–¢–ê: –Ω–µ –Ω–∞—á–∏–Ω–∞–µ–º –±–æ–π –≤ –ø–µ—Ä–≤—ã–µ —Å–µ–∫—É–Ω–¥—ã –∏–≥—Ä—ã
	if get_tree().get_frame() < 60:  # –ü–µ—Ä–≤—ã–µ 60 –∫–∞–¥—Ä–æ–≤ (‚âà1 —Å–µ–∫—É–Ω–¥–∞)
		print("–°–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ –¥–ª—è –±–æ—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
		return
	
	current_enemy = enemy
	current_enemy_stats = enemy_stats_ref
	show()
	get_tree().paused = true
	update_stats()
	battle_log.text = "–ë–æ–π –Ω–∞—á–∞–ª—Å—è –ø—Ä–æ—Ç–∏–≤ %s!\n" % current_enemy_stats.enemy_name
	timer.start(1.0)
	

func update_stats():
	# –ü–†–û–í–ï–†–ö–ê –ù–ê –í–ê–õ–ò–î–ù–û–°–¢–¨ –í–†–ê–ì–ê –ò –ï–ì–û –°–¢–ê–¢–ò–°–¢–ò–ö
	if not is_instance_valid(current_enemy) or not current_enemy_stats:
		end_battle(false)
		return
	
	_update_stat_display(player_stats_container, "–ò–≥—Ä–æ–∫", 
		player_stats_instance.current_health, player_stats_instance.get_max_health(),  # ‚Üê get_max_health()
		player_stats_instance.get_damage(), player_stats_instance.get_defense())       # ‚Üê get_damage() –∏ get_defense()
	
	# –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤—Ä–∞–≥–∞ - –ò–°–ü–û–õ–¨–ó–£–ï–ú –ì–ï–¢–¢–ï–†–´!
	_update_stat_display(enemy_stats, current_enemy_stats.enemy_name, 
		current_enemy_stats.current_health, current_enemy_stats.get_max_health(),      # ‚Üê get_max_health()
		current_enemy_stats.get_damage(), current_enemy_stats.get_defense())           # ‚Üê get_damage() –∏ get_defense()

func _update_stat_display(container: VBoxContainer, name: String, 
						 health: int, max_health: int, damage: int, defense: int):
	for child in container.get_children():
		child.queue_free()
	
	var name_label = Label.new()
	name_label.text = name
	container.add_child(name_label)
	
	var health_label = Label.new()
	health_label.text = "HP: %d/%d" % [health, max_health]
	container.add_child(health_label)
	
	var damage_label = Label.new()
	damage_label.text = "–£—Ä–æ–Ω: %d" % damage
	container.add_child(damage_label)
	
	var defense_label = Label.new()
	defense_label.text = "–ó–∞—â–∏—Ç–∞: %d" % defense
	container.add_child(defense_label)

func _on_timer_timeout():
	# –ü–†–û–í–ï–†–ö–ê: –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ —É–º–µ—Ä - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –±–æ–π
	if player_stats_instance.current_health <= 0:
		end_battle(false)
		return
	
	if is_player_turn:
		player_attack()
	else:
		enemy_attack()
	
	update_stats()
	
	# –ü–†–û–í–ï–†–ö–ê –ø–æ—Å–ª–µ –∞—Ç–∞–∫–∏
	if not is_instance_valid(current_enemy) or not current_enemy_stats:
		print("‚ùå –í—Ä–∞–≥ —É–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ –∞—Ç–∞–∫–∏")
		end_battle(false)
		return
	
	# –ü–†–û–í–ï–†–ö–ê –∑–¥–æ—Ä–æ–≤—å—è —á–µ—Ä–µ–∑ MonsterStats
	if current_enemy_stats.current_health <= 0:
		end_battle(true)
	elif player_stats_instance.current_health <= 0:
		end_battle(false)
	else:
		is_player_turn = !is_player_turn
		timer.start(1.0)

func get_random_attack_message(messages_array: Array) -> String:
	return messages_array[randi() % messages_array.size()]

func player_attack():
	if not is_instance_valid(current_enemy) or not current_enemy_stats:
		end_battle(false)
		return
	
	var damage = max(1, player_stats_instance.get_damage() - current_enemy_stats.get_defense())
	if randf() < 0.1:
		damage = int(damage * 1.5)
		var message = get_random_attack_message(player_critical_messages) % damage
		battle_log.text += message + "\n"
	else:
		var message = get_random_attack_message(player_attack_messages) % damage
		battle_log.text += message + "\n"
	current_enemy_stats.take_damage(damage)

func enemy_attack():
	if not is_instance_valid(current_enemy) or not current_enemy_stats:
		end_battle(false)
		return
	
	var damage = max(1, current_enemy_stats.get_damage() - player_stats_instance.get_defense())
	if randf() < 0.1:
		damage = int(damage * 1.5)
		var message = get_random_attack_message(enemy_critical_messages) % [current_enemy_stats.enemy_name, damage]
		battle_log.text += message + "\n"
	else:
		var message = get_random_attack_message(enemy_attack_messages) % [current_enemy_stats.enemy_name, damage]
		battle_log.text += message + "\n"
	player_stats_instance.take_damage(damage)

func end_battle(victory: bool):
	if victory and current_enemy_stats:
		var exp_gained = current_enemy_stats.exp_reward
		player_stats_instance.add_exp(exp_gained)
		battle_log.text += "–ü–æ–±–µ–¥–∞! –ü–æ–ª—É—á–µ–Ω–æ %d –æ–ø—ã—Ç–∞.\n" % exp_gained
		
		if is_instance_valid(current_enemy):
			current_enemy.queue_free()
	else:
		battle_log.text += "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏...\n"
	
	timer.stop()
	battle_ended.emit(victory)
	
	# –í–ê–ñ–ù–û: –ù–ï —Å–Ω–∏–º–∞–µ–º –ø–∞—É–∑—É –µ—Å–ª–∏ –Ω–∞—á–∞–ª–∞—Å—å –ø—Ä–æ–∫–∞—á–∫–∞ —É—Ä–æ–≤–Ω—è!
	# –ü–∞—É–∑—É –±—É–¥–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å LevelUpMenu
	if not player_stats_instance.current_health <= 0:
		# –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –Ω–µ —É–º–µ—Ä –ò –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å –ø—Ä–æ–∫–∞—á–∫–∞
		var player_stats = get_tree().get_first_node_in_group("player_stats")
		if player_stats and player_stats.available_points <= 0:  # ‚Üê –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ—Ç –æ—á–∫–æ–≤ –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏
			get_tree().paused = false
			print("–ë–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–∞—É–∑–∞ —Å–Ω—è—Ç–∞")
		else:
			print("–ë–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–∞—É–∑–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏")
	
	hide()
	
	current_enemy = null
	current_enemy_stats = null
